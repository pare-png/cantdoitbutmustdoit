"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _makerBase = _interopRequireDefault(require("@electron-forge/maker-base"));

var _path = _interopRequireDefault(require("path"));

var _util = require("util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MakerZIP extends _makerBase.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "name", 'zip');

    _defineProperty(this, "defaultPlatforms", ['darwin', 'mas', 'win32', 'linux']);
  }

  isSupportedOnCurrentPlatform() {
    return true;
  }

  async make({
    dir,
    makeDir,
    appName,
    packageJSON,
    targetArch,
    targetPlatform
  }) {
    // eslint-disable-next-line global-require
    const {
      zip
    } = require('cross-zip');

    const zipDir = ['darwin', 'mas'].includes(targetPlatform) ? _path.default.resolve(dir, `${appName}.app`) : dir;

    const zipPath = _path.default.resolve(makeDir, 'zip', targetPlatform, targetArch, `${_path.default.basename(dir)}-${packageJSON.version}.zip`);

    await this.ensureFile(zipPath);
    await (0, _util.promisify)(zip)(zipDir, zipPath);
    return [zipPath];
  }

}

exports.default = MakerZIP;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NYWtlclpJUC50cyJdLCJuYW1lcyI6WyJNYWtlclpJUCIsIk1ha2VyQmFzZSIsImlzU3VwcG9ydGVkT25DdXJyZW50UGxhdGZvcm0iLCJtYWtlIiwiZGlyIiwibWFrZURpciIsImFwcE5hbWUiLCJwYWNrYWdlSlNPTiIsInRhcmdldEFyY2giLCJ0YXJnZXRQbGF0Zm9ybSIsInppcCIsInJlcXVpcmUiLCJ6aXBEaXIiLCJpbmNsdWRlcyIsInBhdGgiLCJyZXNvbHZlIiwiemlwUGF0aCIsImJhc2VuYW1lIiwidmVyc2lvbiIsImVuc3VyZUZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUdBOztBQUNBOzs7Ozs7QUFJZSxNQUFNQSxRQUFOLFNBQXVCQyxrQkFBdkIsQ0FBaUQ7QUFBQTtBQUFBOztBQUFBLGtDQUN2RCxLQUR1RDs7QUFBQSw4Q0FHMUIsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixPQUFsQixFQUEyQixPQUEzQixDQUgwQjtBQUFBOztBQUs5REMsRUFBQUEsNEJBQTRCLEdBQUc7QUFDN0IsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsUUFBTUMsSUFBTixDQUFXO0FBQ1RDLElBQUFBLEdBRFM7QUFFVEMsSUFBQUEsT0FGUztBQUdUQyxJQUFBQSxPQUhTO0FBSVRDLElBQUFBLFdBSlM7QUFLVEMsSUFBQUEsVUFMUztBQU1UQyxJQUFBQTtBQU5TLEdBQVgsRUFPaUI7QUFDZjtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFVQyxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFFQSxVQUFNQyxNQUFNLEdBQUcsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQkMsUUFBbEIsQ0FBMkJKLGNBQTNCLElBQTZDSyxjQUFLQyxPQUFMLENBQWFYLEdBQWIsRUFBbUIsR0FBRUUsT0FBUSxNQUE3QixDQUE3QyxHQUFtRkYsR0FBbEc7O0FBRUEsVUFBTVksT0FBTyxHQUFHRixjQUFLQyxPQUFMLENBQWFWLE9BQWIsRUFBc0IsS0FBdEIsRUFBNkJJLGNBQTdCLEVBQTZDRCxVQUE3QyxFQUEwRCxHQUFFTSxjQUFLRyxRQUFMLENBQWNiLEdBQWQsQ0FBbUIsSUFBR0csV0FBVyxDQUFDVyxPQUFRLE1BQXRHLENBQWhCOztBQUVBLFVBQU0sS0FBS0MsVUFBTCxDQUFnQkgsT0FBaEIsQ0FBTjtBQUNBLFVBQU0scUJBQVVOLEdBQVYsRUFBZUUsTUFBZixFQUF1QkksT0FBdkIsQ0FBTjtBQUVBLFdBQU8sQ0FBQ0EsT0FBRCxDQUFQO0FBQ0Q7O0FBNUI2RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYWtlckJhc2UsIHsgTWFrZXJPcHRpb25zIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL21ha2VyLWJhc2UnO1xuaW1wb3J0IHsgRm9yZ2VQbGF0Zm9ybSB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9zaGFyZWQtdHlwZXMnO1xuXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnO1xuXG5leHBvcnQgdHlwZSBNYWtlclpJUENvbmZpZyA9IHt9O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWtlclpJUCBleHRlbmRzIE1ha2VyQmFzZTxNYWtlclpJUENvbmZpZz4ge1xuICBuYW1lID0gJ3ppcCc7XG5cbiAgZGVmYXVsdFBsYXRmb3JtczogRm9yZ2VQbGF0Zm9ybVtdID0gWydkYXJ3aW4nLCAnbWFzJywgJ3dpbjMyJywgJ2xpbnV4J107XG5cbiAgaXNTdXBwb3J0ZWRPbkN1cnJlbnRQbGF0Zm9ybSgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGFzeW5jIG1ha2Uoe1xuICAgIGRpcixcbiAgICBtYWtlRGlyLFxuICAgIGFwcE5hbWUsXG4gICAgcGFja2FnZUpTT04sXG4gICAgdGFyZ2V0QXJjaCxcbiAgICB0YXJnZXRQbGF0Zm9ybSxcbiAgfTogTWFrZXJPcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGdsb2JhbC1yZXF1aXJlXG4gICAgY29uc3QgeyB6aXAgfSA9IHJlcXVpcmUoJ2Nyb3NzLXppcCcpO1xuXG4gICAgY29uc3QgemlwRGlyID0gWydkYXJ3aW4nLCAnbWFzJ10uaW5jbHVkZXModGFyZ2V0UGxhdGZvcm0pID8gcGF0aC5yZXNvbHZlKGRpciwgYCR7YXBwTmFtZX0uYXBwYCkgOiBkaXI7XG5cbiAgICBjb25zdCB6aXBQYXRoID0gcGF0aC5yZXNvbHZlKG1ha2VEaXIsICd6aXAnLCB0YXJnZXRQbGF0Zm9ybSwgdGFyZ2V0QXJjaCwgYCR7cGF0aC5iYXNlbmFtZShkaXIpfS0ke3BhY2thZ2VKU09OLnZlcnNpb259LnppcGApO1xuXG4gICAgYXdhaXQgdGhpcy5lbnN1cmVGaWxlKHppcFBhdGgpO1xuICAgIGF3YWl0IHByb21pc2lmeSh6aXApKHppcERpciwgemlwUGF0aCk7XG5cbiAgICByZXR1cm4gW3ppcFBhdGhdO1xuICB9XG59XG4iXX0=