"use strict";

require("source-map-support/register");

var _core = require("@electron-forge/core");

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _inquirer = _interopRequireDefault(require("inquirer"));

var _commander = _interopRequireDefault(require("commander"));

var _path = _interopRequireDefault(require("path"));

require("./util/terminate");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(async () => {
  let repo;

  _commander.default.version((await _fsExtra.default.readJson(_path.default.resolve(__dirname, '../package.json'))).version).arguments('[repository]').option('--prerelease', 'Fetch prerelease versions').action(repository => {
    repo = repository;
  }).parse(process.argv);

  const chooseAsset = async assets => {
    const choices = [];
    assets.forEach(asset => {
      choices.push({
        name: asset.name,
        value: asset.id
      });
    });
    const {
      assetID
    } = await _inquirer.default.createPromptModule()({
      choices,
      type: 'list',
      name: 'assetID',
      message: 'Multiple potential assets found, please choose one from the list below:'.cyan
    });
    return assets.find(asset => asset.id === assetID);
  };

  await _core.api.install({
    chooseAsset,
    repo,
    interactive: true,
    prerelease: _commander.default.prerelease
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGVjdHJvbi1mb3JnZS1pbnN0YWxsLnRzIl0sIm5hbWVzIjpbInJlcG8iLCJwcm9ncmFtIiwidmVyc2lvbiIsImZzIiwicmVhZEpzb24iLCJwYXRoIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImFyZ3VtZW50cyIsIm9wdGlvbiIsImFjdGlvbiIsInJlcG9zaXRvcnkiLCJwYXJzZSIsInByb2Nlc3MiLCJhcmd2IiwiY2hvb3NlQXNzZXQiLCJhc3NldHMiLCJjaG9pY2VzIiwiZm9yRWFjaCIsImFzc2V0IiwicHVzaCIsIm5hbWUiLCJ2YWx1ZSIsImlkIiwiYXNzZXRJRCIsImlucXVpcmVyIiwiY3JlYXRlUHJvbXB0TW9kdWxlIiwidHlwZSIsIm1lc3NhZ2UiLCJjeWFuIiwiZmluZCIsImFwaSIsImluc3RhbGwiLCJpbnRlcmFjdGl2ZSIsInByZXJlbGVhc2UiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7OztBQUVBLENBQUMsWUFBWTtBQUNYLE1BQUlBLElBQUo7O0FBRUFDLHFCQUNHQyxPQURILENBQ1csQ0FBQyxNQUFNQyxpQkFBR0MsUUFBSCxDQUFZQyxjQUFLQyxPQUFMLENBQWFDLFNBQWIsRUFBd0IsaUJBQXhCLENBQVosQ0FBUCxFQUFnRUwsT0FEM0UsRUFFR00sU0FGSCxDQUVhLGNBRmIsRUFHR0MsTUFISCxDQUdVLGNBSFYsRUFHMEIsMkJBSDFCLEVBSUdDLE1BSkgsQ0FJV0MsVUFBRCxJQUFnQjtBQUFFWCxJQUFBQSxJQUFJLEdBQUdXLFVBQVA7QUFBb0IsR0FKaEQsRUFLR0MsS0FMSCxDQUtTQyxPQUFPLENBQUNDLElBTGpCOztBQU9BLFFBQU1DLFdBQVcsR0FBRyxNQUFPQyxNQUFQLElBQWtDO0FBQ3BELFVBQU1DLE9BQTBDLEdBQUcsRUFBbkQ7QUFDQUQsSUFBQUEsTUFBTSxDQUFDRSxPQUFQLENBQWdCQyxLQUFELElBQVc7QUFDeEJGLE1BQUFBLE9BQU8sQ0FBQ0csSUFBUixDQUFhO0FBQUVDLFFBQUFBLElBQUksRUFBRUYsS0FBSyxDQUFDRSxJQUFkO0FBQW9CQyxRQUFBQSxLQUFLLEVBQUVILEtBQUssQ0FBQ0k7QUFBakMsT0FBYjtBQUNELEtBRkQ7QUFHQSxVQUFNO0FBQUVDLE1BQUFBO0FBQUYsUUFBYyxNQUFNQyxrQkFBU0Msa0JBQVQsR0FBbUQ7QUFDM0VULE1BQUFBLE9BRDJFO0FBRTNFVSxNQUFBQSxJQUFJLEVBQUUsTUFGcUU7QUFHM0VOLE1BQUFBLElBQUksRUFBRSxTQUhxRTtBQUkzRU8sTUFBQUEsT0FBTyxFQUFFLDBFQUEwRUM7QUFKUixLQUFuRCxDQUExQjtBQU9BLFdBQU9iLE1BQU0sQ0FBQ2MsSUFBUCxDQUFhWCxLQUFELElBQVdBLEtBQUssQ0FBQ0ksRUFBTixLQUFhQyxPQUFwQyxDQUFQO0FBQ0QsR0FiRDs7QUFlQSxRQUFNTyxVQUFJQyxPQUFKLENBQVk7QUFDaEJqQixJQUFBQSxXQURnQjtBQUVoQmYsSUFBQUEsSUFGZ0I7QUFHaEJpQyxJQUFBQSxXQUFXLEVBQUUsSUFIRztBQUloQkMsSUFBQUEsVUFBVSxFQUFFakMsbUJBQVFpQztBQUpKLEdBQVosQ0FBTjtBQU1ELENBL0JEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBpLCBJbnN0YWxsQXNzZXQgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvY29yZSc7XG5cbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgaW5xdWlyZXIgZnJvbSAnaW5xdWlyZXInO1xuaW1wb3J0IHByb2dyYW0gZnJvbSAnY29tbWFuZGVyJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5pbXBvcnQgJy4vdXRpbC90ZXJtaW5hdGUnO1xuXG4oYXN5bmMgKCkgPT4ge1xuICBsZXQgcmVwbyE6IHN0cmluZztcblxuICBwcm9ncmFtXG4gICAgLnZlcnNpb24oKGF3YWl0IGZzLnJlYWRKc29uKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi9wYWNrYWdlLmpzb24nKSkpLnZlcnNpb24pXG4gICAgLmFyZ3VtZW50cygnW3JlcG9zaXRvcnldJylcbiAgICAub3B0aW9uKCctLXByZXJlbGVhc2UnLCAnRmV0Y2ggcHJlcmVsZWFzZSB2ZXJzaW9ucycpXG4gICAgLmFjdGlvbigocmVwb3NpdG9yeSkgPT4geyByZXBvID0gcmVwb3NpdG9yeTsgfSlcbiAgICAucGFyc2UocHJvY2Vzcy5hcmd2KTtcblxuICBjb25zdCBjaG9vc2VBc3NldCA9IGFzeW5jIChhc3NldHM6IEluc3RhbGxBc3NldFtdKSA9PiB7XG4gICAgY29uc3QgY2hvaWNlczogeyBuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgfVtdID0gW107XG4gICAgYXNzZXRzLmZvckVhY2goKGFzc2V0KSA9PiB7XG4gICAgICBjaG9pY2VzLnB1c2goeyBuYW1lOiBhc3NldC5uYW1lLCB2YWx1ZTogYXNzZXQuaWQgfSk7XG4gICAgfSk7XG4gICAgY29uc3QgeyBhc3NldElEIH0gPSBhd2FpdCBpbnF1aXJlci5jcmVhdGVQcm9tcHRNb2R1bGUoKTx7IGFzc2V0SUQ6IHN0cmluZyB9Pih7XG4gICAgICBjaG9pY2VzLFxuICAgICAgdHlwZTogJ2xpc3QnLFxuICAgICAgbmFtZTogJ2Fzc2V0SUQnLFxuICAgICAgbWVzc2FnZTogJ011bHRpcGxlIHBvdGVudGlhbCBhc3NldHMgZm91bmQsIHBsZWFzZSBjaG9vc2Ugb25lIGZyb20gdGhlIGxpc3QgYmVsb3c6Jy5jeWFuLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGFzc2V0cy5maW5kKChhc3NldCkgPT4gYXNzZXQuaWQgPT09IGFzc2V0SUQpITtcbiAgfTtcblxuICBhd2FpdCBhcGkuaW5zdGFsbCh7XG4gICAgY2hvb3NlQXNzZXQsXG4gICAgcmVwbyxcbiAgICBpbnRlcmFjdGl2ZTogdHJ1ZSxcbiAgICBwcmVyZWxlYXNlOiBwcm9ncmFtLnByZXJlbGVhc2UsXG4gIH0pO1xufSkoKTtcbiJdfQ==